

from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import time

# Configuración del navegador
opts = Options()
opts.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36")

driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=opts)

# URL de la página de LinkedIn
url = "https://www.linkedin.com/jobs/search/?currentJobId=3903380739&distance=25&geoId=100876405&keywords=analista%20de%20datos&origin=JOBS_HOME_KEYWORD_HISTORY&refresh=true"

# Navegar a la página de LinkedIn
driver.get(url)

# Esperar a que la página cargue
time.sleep(5)  # Ajusta el tiempo según la velocidad de tu conexión

# Simular el desplazamiento hacia abajo
for i in range(10):  # Ajusta el rango según la cantidad de trabajos que quieras cargar
    driver.find_element(By.TAG_NAME, 'body').send_keys(Keys.END)
    time.sleep(2)  # Esperar un poco para que se carguen los nuevos elementos

# Esperar a que todos los trabajos se carguen
time.sleep(5)  # Ajusta el tiempo según la cantidad de trabajos y la velocidad de tu conexión

# Obtener los IDs de los trabajos
job_elements = driver.find_elements(By.CSS_SELECTOR, "div.base-card")
job_ids = [job.get_attribute("data-entity-urn").split(":")[3] for job in job_elements]

# Imprimir los IDs de los trabajos
for job_id in job_ids:
    print(job_id)

# Cerrar el navegador
driver.quit()
